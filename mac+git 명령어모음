맥 단축키

Safari 	닫은 탭 다시 돌리기	shift + command + T
	탭닫기	Command + W
Mac	sportlight	Command + spacebar
	이모티콘	control + command + spacebar
	잘라내기	복사한후 -> option + command + V
	아예 꺼버리기	command + q


깃 명령어

 명령어	정의	
git init	해당 폴더내 깃 활성화	
git remote add origin [원격 저장소(레파지토리) 주소	원격저장소와 로컬 저장소 연결	
git branch -a		
git branch [브런치명]		
git switch [브런치명]		
git branch —set-upstream-to origin/[브런치명] main		
git clone [레파지토리주소]		
git clone —branch [브런치명][레파지토리주소]	특정 branch 복제	
git checkout -b [새로운브런치]	브런치 생성 후 이동	
 
git 
git status
git add .

git init 깃 초기화, 저장소 생성
git remote add origin [깃허브 원격 저장소(레파지토리) 주소] 레파지토리와 로컬 저장소 연결
git config --global user.name [이름] 사용자 이름 설정
git config --global user.email [이메일주소] 사용자 이메일 설정


git branch —set-upstream-to origin/main main

git switch [브랜치명]

git branch -a

git checkout -b [새로운브런치]

git branch develop
+
git switch develop 
== git checkout -b develop

—> remote origin main 만 있었을때 행동이력
1. [local] develop branch 생성
2. [local] develop branch 이동
3. [local] local 작업 add . / commit -m “branch생성”
4. [local] push origin develop  
5. ==========원격(remote) 저장소(origin) 디벨롭(develop) 브런치 생성=============
6. 새로운 로컬 브런치 생성
7. [local] git checkout -b test-branch    test-branch 생성후 이동
8. [local] local 작업 add . / commit -m “test-branch생성”
9. test-branch -> develop 으로 push
10. [local] git push origin test-branch:devleop


git restore --staged .

임시 저장소만들기(modify만 되기때문에 추가한 파일은 다 stage에 올려야한다.)
git stash save "stash명"
git stash list
git stash apply [stash name]
git stash pop -> stack 제일 높은거 pop 해서 apply + drop
git stash show -p | git apply -R -> 실수로 stash apply한 것을 되돌리기 하기 위해 사용하는 명령어
