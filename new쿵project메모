====개인 프로젝트====
- db는 무엇을쓸것인지, 또 db비용 얼만지..일단 local로 테스트 다해보고 그다음 비용생각해보기
- 호스팅은 어떻게 할건지
- 챌린지로 만들면 좋을듯
- 구성은 사이트 들어가자마자 셋팅페이지 시작
- 3글자, 4글자, 5글자 로 시작
- 최대한 간단하게
- 타이머 , 명예의전당 id 값, 점수
- 순위, 게임은 db에 2글자, 3글자, 4글자 모든 단어 insert
- 몇초안에 맞추면 combo! 반응나오게
- 테이블은 단어 테이블이랑, 순위테이블, 맞출때 반응이 빨라야된다.
- nosql db 와 sql db 뭐로 할지 일단 만들어보고 테스트할때 해보기
- front 단은 react 로 할지 아니면 typeleafe로 할지 간단한거니깐
- 일단 웹으로 -> 반응형 되게끔 만들기
- 등록되어있는 단어 추출 어디서 구해올지 찾아보기
- 쿵 말고 상식문제나 나라 수도 맞추기 등등으로 우회?
- 지도시스템 쪽 참고
- 구글 recaptcha v2
- 클라우드플레어
- 올림픽 실시간정보는 어디서 따오는지 확인
- cherry pick 할때 merge한 이력 가져오면 되는건지 아니면 둘다 가져오는건지 아니면 merge이력말고 고친소스 가져와서 하는건지 알아보기
- 로그인 간단하게 구현
- socket
- 예전 게임점수 확인 닉네임 중복되는지 확인
- 단일로 파일 테스트 되는지 확인(intellij)

  참고
  
  데이터 사이트 참고
  https://github.com/spellcheck-ko/korean-dict-nikl?tab=readme-ov-file
  
  
  
  수도
  나무위키 : https://namu.wiki/w/수도(도시)/국가별
  key , value 로 저장하기
  
  잘안되더라도 일단 이건 해보기
  jpa
  gradle
  java 17
  mysql
  intellij
  react
   
  or node js
  
  
  호스팅 사이트
  
1) 회원 로그인 , 회원가입
   ㄴ 일반, 소셜(google, naver, kakao)
   ㄴ 회원등급
   ㄴ 
2) 지도 서비스
   ㄴ 카카오 api 이용
3) 채팅, 메세지
   ㄴ socket
4) 게시판
   ㄴ 페이지 or 무한스크롤 (성격에 따라 바뀔예정)
5) 메일
6) 캡차! (ddos 방지) 
7) 엑셀
8) bucket4j 활용 api 제한 설정
  